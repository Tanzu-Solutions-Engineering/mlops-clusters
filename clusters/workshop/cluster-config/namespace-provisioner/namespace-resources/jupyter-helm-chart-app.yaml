#@ load("@ytt:data", "data")
---
apiVersion: secretgen.k14s.io/v1alpha1
kind: Password
metadata:
  name: configurable-http-proxy
spec:
  length: 64
---
apiVersion: secretgen.k14s.io/v1alpha1
kind: Password
metadata:
  name: cryptkeeper
spec:
  length: 64
---
apiVersion: secretgen.k14s.io/v1alpha1
kind: Password
metadata:
  name: jupyterhub
spec:
  length: 64
---
apiVersion: secretgen.carvel.dev/v1alpha1
kind: SecretTemplate
metadata:
  name: jupyterhub-secret-values
  annotations:
    kapp.k14s.io/change-group: secrets
spec:
  inputResources:
  - name: configurable-http-proxy
    ref:
      apiVersion: v1
      kind: Secret
      name: configurable-http-proxy
  - name: cryptkeeper
    ref:
      apiVersion: v1
      kind: Secret
      name: cryptkeeper
  - name: jupyterhub
    ref:
      apiVersion: v1
      kind: Secret
      name: jupyterhub
  template:
    data:
      secrets.yaml: |
        hub:
          config:
            ConfigurableHTTPProxy:
              auth_token: $(.configurable-http-proxy.data.password)
            CryptKeeper:
              keys: $(.cryptkeeper.data.password)
            JupyterHub:
              cookie_secret: $(.jupyterhub.data.password)
---
apiVersion: v1
kind: Secret
metadata:
  name: jupyter-values
  annotations:
    kapp.k14s.io/change-group: secrets
stringData:
  data.yml: |
    proxy:
      service:
        type: "ClusterIP"
    scheduling:
      userScheduler:
        enabled: false
---
apiVersion: kappctrl.k14s.io/v1alpha1
kind: App
metadata:
  name: jupyterhub
  annotations:
    kapp.k14s.io/change-rule.0: "upsert after upserting secrets"
    kapp.k14s.io/change-rule.1: "delete before deleting secrets"
spec:
  serviceAccountName: jupyterhub-helm-sa
  fetch:
    - helmChart:
        name: jupyterhub
        version: "3.0.3"
        repository:
          url: https://hub.jupyter.org/helm-chart/

  template:
    - helmTemplate:
        kubernetesVersion: {}
        valuesFrom:
          - secretRef:
              name: jupyter-values
          - secretRef:
              name: jupyterhub-secret-values
    - ytt:
        inline:
          paths:
            config.yaml: |
              ---
              apiVersion: kapp.k14s.io/v1alpha1
              kind: Config
              rebaseRules:
              - paths:
                - [metadata, annotations, volume.kubernetes.io/selected-node]
                - [metadata, annotations, volume.kubernetes.io/storage-provisioner]
                type: copy
                sources: [new, existing]
                resourceMatchers:
                - apiGroupKindMatcher: {apiGroup: "", kind: PersistentVolumeClaim}            
            overlay.yaml: |
              #@ load("@ytt:overlay", "overlay")
              
              #@overlay/match by=overlay.subset({"kind": "Deployment", "metadata": {"name": "hub"}}), expects=1
              ---
              spec:
                template:
                  metadata:
                    annotations:
                      #@overlay/remove
                      checksum/config-map: ""
                      #@overlay/remove
                      checksum/secret: ""

              #@overlay/match by=overlay.subset({"kind": "Deployment", "metadata": {"name": "proxy"}}), expects=1
              ---
              spec:
                template:
                  metadata:
                    annotations:
                      #@overlay/remove
                      checksum/auth-token: ""
                      #@overlay/remove
                      checksum/proxy-secret: ""

              #@overlay/match by=overlay.subset({"kind": "Secret", "metadata": {"name": "hub"}}), expects=1
              ---
              annotations:
                kapp.k14s.io/versioned: ""

              #@overlay/match by=overlay.subset({"kind": "ConfigMap", "metadata": {"name": "hub"}}), expects=1
              ---
              annotations:
                kapp.k14s.io/versioned: ""

  deploy:
    - kapp:
        delete:
          #! Force delete PVCs, since StatefulSet does not delete them
          rawOptions: ["--apply-ignored=true"]
---
apiVersion: projectcontour.io/v1
kind: HTTPProxy
metadata:
  name: jupyter
spec:
  virtualhost:
    fqdn: #@ "jupyterhub-" + data.values.name + ".mlops.tanzu.corby.page"
    tls:
      secretName: contour-tls/tls
  routes:
    - conditions:
        - prefix: /
      services:
        - name: proxy-public
          port: 80
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: jupyterhub-helm-sa
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: jupyterhub-helm-rb
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
  - kind: ServiceAccount
    name: jupyterhub-helm-sa


